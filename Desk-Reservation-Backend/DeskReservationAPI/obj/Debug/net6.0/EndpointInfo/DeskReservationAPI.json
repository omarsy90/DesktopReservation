{
  "openapi": "3.0.1",
  "info": {
    "title": "Desk ReservationAPI",
    "version": "v1"
  },
  "paths": {
    "/api/Comment": {
      "get": {
        "tags": [
          "Comment"
        ],
        "summary": "returns all comments",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Comment"
        ],
        "summary": "create comment.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Comment/{id}": {
      "get": {
        "tags": [
          "Comment"
        ],
        "summary": "returns comment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Desk": {
      "get": {
        "tags": [
          "Desk"
        ],
        "summary": "retuens all desks",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Desk"
        ],
        "summary": "create Desk.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeskModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeskModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeskModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Desk"
        ],
        "summary": "update desk.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeskModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeskModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeskModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Desk/{id}": {
      "get": {
        "tags": [
          "Desk"
        ],
        "summary": "returns desk by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "DeskReservationAPI"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/File/{fileName}": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "return file by file name if the file available to be exposed.",
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FixReservation/confirmed": {
      "get": {
        "tags": [
          "FixReservation"
        ],
        "summary": "get user's fixReservations confirmed(accepted or rejected)",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FixReservation/request": {
      "get": {
        "tags": [
          "FixReservation"
        ],
        "summary": "get user's fixReservation requests (not confirmed by acceptance or rejection)",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "FixReservation"
        ],
        "summary": "send  fix reservation request.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FixReservation/{id}": {
      "get": {
        "tags": [
          "FixReservation"
        ],
        "summary": "get fix reservation by given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FixReservation/request/{reservationID}": {
      "post": {
        "tags": [
          "FixReservation"
        ],
        "summary": "confirm fix reservation with true or false . this endpoint intends to be used for admin rule.",
        "parameters": [
          {
            "name": "reservationID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmReservationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmReservationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmReservationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FixReservation/request/all": {
      "get": {
        "tags": [
          "FixReservation"
        ],
        "summary": "get all fix resevation that not confirmed( accepted or rejected) for all user .this endpoint intends to be used for admin rule",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FlexReservation": {
      "get": {
        "tags": [
          "FlexReservation"
        ],
        "summary": "returns user's flex reservations",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "FlexReservation"
        ],
        "summary": "create  flex reservation",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlexReservationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FlexReservationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FlexReservationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FlexReservation/{id}": {
      "get": {
        "tags": [
          "FlexReservation"
        ],
        "summary": "returns flex reservation by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "FlexReservation"
        ],
        "summary": "remove flex reservation by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "login registered user.\r\nfor test purpose : (email =user@gmail.com , password=User111$ ) .\r\nfor admin  (email =admin@gmail.com , password =adminUser$  )",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "register new user",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "returns user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CommentModel": {
        "required": [
          "commentTxt",
          "deskID"
        ],
        "type": "object",
        "properties": {
          "deskID": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "commentTxt": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ConfirmReservationRequest": {
        "type": "object",
        "properties": {
          "isConfirmed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DeskModel": {
        "required": [
          "equipmentst",
          "isActive",
          "label",
          "office"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "minLength": 1,
            "type": "string"
          },
          "map": {
            "type": "string",
            "nullable": true
          },
          "office": {
            "minLength": 1,
            "type": "string"
          },
          "equipmentst": {
            "minLength": 1,
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FlexReservationModel": {
        "required": [
          "deskID",
          "dtStart",
          "isFavourited"
        ],
        "type": "object",
        "properties": {
          "deskID": {
            "type": "integer",
            "format": "int32"
          },
          "dtStart": {
            "type": "string",
            "format": "date-time"
          },
          "isFavourited": {
            "type": "boolean"
          },
          "dtEnd": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "LoginModel": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "pattern": "^(?=.*[A-Z])(?=.*[\\W_])(?=.*[a-zA-Z]).{8,}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RegisterModel": {
        "required": [
          "department",
          "email",
          "firstName",
          "lastName",
          "password"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^(?=.*[A-Z])(?=.*[\\W_])(?=.*[a-zA-Z]).{8,}$",
            "type": "string"
          },
          "department": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ReservationModel": {
        "required": [
          "deskID",
          "dtStart",
          "isFavourited"
        ],
        "type": "object",
        "properties": {
          "deskID": {
            "type": "integer",
            "format": "int32"
          },
          "dtStart": {
            "type": "string",
            "format": "date-time"
          },
          "isFavourited": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserModel": {
        "required": [
          "department",
          "email",
          "firstName",
          "lastName",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "department": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^(?=.*[A-Z])(?=.*[\\W_])(?=.*[a-zA-Z]).{8,}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 1safsfsdfdfd\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}